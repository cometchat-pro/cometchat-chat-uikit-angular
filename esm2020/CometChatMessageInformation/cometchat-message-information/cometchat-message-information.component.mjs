import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CometChatMessageEvents, CometChatUIKitConstants, Receipts, States, fontHelper, localize } from '@cometchat/uikit-resources';
import { ListItemStyle, ReceiptStyle } from '@cometchat/uikit-elements';
import { MessageInformationStyle, MessageReceiptUtils } from '@cometchat/uikit-shared';
import { CometChat } from '@cometchat/chat-sdk-javascript';
import { CometChatException } from '../../Shared/Utils/ComeChatException';
import { CometChatUIKit } from '../../Shared/CometChatUIkit/CometChatUIKit';
import * as i0 from "@angular/core";
import * as i1 from "../../CometChatTheme.service";
import * as i2 from "../../CometChatList/cometchat-list.component";
import * as i3 from "@angular/common";
/**
*
* CometChatMessageInformationComponent is a used to render listitem component.
*
* @version 1.0.0
* @author CometChatTeam
* @copyright Â© 2022 CometChat Inc.
*
*/
export class CometChatMessageInformationComponent {
    constructor(ref, themeService) {
        this.ref = ref;
        this.themeService = themeService;
        this.closeIconURL = "assets/close2x.svg";
        this.title = localize("MESSAGE_INFORMATION");
        this.onError = (error) => {
            console.log(error);
        };
        this.messageInformationStyle = {
            height: "500px",
            width: "500px"
        };
        this.readIcon = "assets/message-read.svg";
        this.deliveredIcon = "assets/message-delivered.svg";
        this.listItemStyle = {};
        this.emptyStateText = localize("NO_RECIPIENTS");
        this.errorStateText = localize("SOMETHING_WRONG");
        this.loadingIconURL = "assets/Spinner.svg";
        this.receipts = [];
        this.receiptStyle = new ReceiptStyle({
            waitIconTint: this.themeService.theme.palette.getAccent700(),
            sentIconTint: this.themeService.theme.palette.getAccent600(),
            deliveredIconTint: this.themeService.theme.palette.getAccent600(),
            readIconTint: this.themeService.theme.palette.getPrimary(),
            errorIconTint: this.themeService.theme.palette.getError(),
            height: "20px",
            width: "20px",
            background: "transparent"
        });
        this.isUserType = false;
        this.deliveredReceipt = Receipts.delivered;
        this.readReceipt = Receipts.read;
        this.listStyle = {};
        this.messageText = localize("MESSAGE");
        this.receiptInfoText = localize("RECEIPT_INFORMATION");
        this.emptyLabelStyle = {
            textFont: '400 11px Inter',
            textColor: "black"
        };
        this.dateStyle = {};
        this.loggedInUser = null;
        this.dividerStyle = {};
        this.states = States.loading;
        this.closeButtonStyle = () => {
            return {
                height: "24px",
                width: "24px",
                border: "none",
                borderRadius: "0",
                background: "transparent",
                buttonIconTint: this.themeService.theme.palette.getPrimary()
            };
        };
        this.wrapperStyle = () => {
            return {
                height: this.messageInformationStyle.height,
                width: this.messageInformationStyle.width,
                background: this.messageInformationStyle.background,
                border: this.messageInformationStyle.border,
                borderRadius: this.messageInformationStyle.borderRadius
            };
        };
        this.getCaptionStyle = () => {
            return {
                textFont: this.messageInformationStyle.captionTextFont,
                textColor: this.messageInformationStyle.captionTextColor
            };
        };
    }
    ngOnChanges(changes) {
    }
    getDatePattern(timestamp) {
        if (this.receiptDatePattern) {
            return this.receiptDatePattern(timestamp);
        }
        else {
            return undefined;
        }
    }
    ngOnInit() {
        this.setTheme();
        CometChatUIKit.getLoggedinUser().then((user) => {
            if (user) {
                this.loggedInUser = user;
                this.getMessageReceipts();
                this.addMessageEventListeners();
            }
        });
    }
    setTheme() {
        this.setMessageInfoStyle();
        this.setListItemStyle();
        this.listStyle = {
            titleTextFont: this.messageInformationStyle.titleTextFont,
            titleTextColor: this.messageInformationStyle.titleTextColor,
            emptyStateTextFont: this.messageInformationStyle.emptyStateTextFont,
            emptyStateTextColor: this.messageInformationStyle.emptyStateTextColor,
            errorStateTextFont: this.messageInformationStyle.errorStateTextFont,
            errorStateTextColor: this.messageInformationStyle.errorStateTextColor,
            loadingIconTint: this.messageInformationStyle.loadingIconTint,
        };
        this.dividerStyle = {
            background: this.messageInformationStyle.dividerTint,
            height: "1px",
            width: "100%",
        };
        this.dateStyle = {
            textFont: '400 11px Inter',
            textColor: this.themeService.theme.palette.getAccent600(),
            background: "transparent",
            height: "100%",
            width: "100%",
        };
        this.ref.detectChanges();
    }
    setListItemStyle() {
        let defaultStyle = new ListItemStyle({
            height: "fit-content",
            width: "100%",
            background: this.themeService.theme.palette.getBackground(),
            activeBackground: "transparent",
            borderRadius: "0",
            titleFont: fontHelper(this.themeService.theme.typography.title2),
            titleColor: this.themeService.theme.palette.getAccent(),
            border: "none",
            separatorColor: this.themeService.theme.palette.getAccent200(),
            hoverBackground: "transparent"
        });
        this.listItemStyle = { ...defaultStyle, ...this.listItemStyle };
    }
    setMessageInfoStyle() {
        let defaultStyle = new MessageInformationStyle({
            background: this.themeService.theme.palette.getBackground(),
            border: `1px solid ${this.themeService.theme.palette.getAccent50()}`,
            titleTextFont: fontHelper(this.themeService.theme.typography.title1),
            titleTextColor: this.themeService.theme.palette.getAccent(),
            emptyStateTextFont: fontHelper(this.themeService.theme.typography.title1),
            emptyStateTextColor: this.themeService.theme.palette.getAccent600(),
            errorStateTextFont: fontHelper(this.themeService.theme.typography.title1),
            errorStateTextColor: this.themeService.theme.palette.getAccent600(),
            loadingIconTint: this.themeService.theme.palette.getAccent600(),
            borderRadius: "8px",
            subtitleTextColor: this.themeService.theme.palette.getAccent600(),
            subtitleTextFont: fontHelper(this.themeService.theme.typography.caption2),
            dividerTint: this.themeService.theme.palette.getAccent100(),
            height: "500px",
            width: "500px",
            captionTextColor: this.themeService.theme.palette.getAccent600(),
            captionTextFont: fontHelper(this.themeService.theme.typography.caption2)
        });
        this.messageInformationStyle = { ...defaultStyle, ...this.messageInformationStyle };
    }
    ngOnDestroy() {
        this.onMessagesDelivered.unsubscribe();
        this.onMessagesRead.unsubscribe();
    }
    addMessageEventListeners() {
        try {
            this.onMessagesDelivered = CometChatMessageEvents.onMessagesDelivered.subscribe((messageReceipt) => {
                if (this.message?.getId() == Number(messageReceipt.getMessageId())) {
                    this.updateReceipt(messageReceipt);
                    this.message?.setDeliveredAt(messageReceipt.getDeliveredAt());
                    this.ref.detectChanges();
                }
            });
            this.onMessagesRead = CometChatMessageEvents.onMessagesRead.subscribe((messageReceipt) => {
                if (this.message?.getId() == Number(messageReceipt.getMessageId())) {
                    this.updateReceipt(messageReceipt);
                    this.message?.setReadAt(messageReceipt.getReadAt());
                    this.ref.detectChanges();
                }
            });
        }
        catch (error) {
            if (this.onError) {
                this.onError(CometChatException(error));
            }
        }
    }
    getAvatarUrl() {
        return this.isUserType ? this.message.getReceiver().getAvatar() : "";
    }
    getUserReceipt() {
        return this.message.getReadAt() || this.message.getDeliveredAt();
    }
    getMessageReceipt() {
        let receipt = MessageReceiptUtils.getReceiptStatus(this.message);
        return receipt;
    }
    updateReceipt(receipt) {
        let messageKey = this.receipts.findIndex((m) => m.getSender().getUid() === receipt.getSender().getUid());
        if (messageKey > -1) {
            if (receipt.getReceiptType() == receipt.RECEIPT_TYPE.READ_RECEIPT) {
                this.receipts[messageKey].setReadAt(receipt.getReadAt());
            }
            else {
                this.receipts[messageKey].setDeliveredAt(receipt.getDeliveredAt());
            }
        }
        this.ref.detectChanges();
    }
    getMessageReceipts() {
        if (this.message.getReceiverType() == CometChatUIKitConstants.MessageReceiverType.user) {
            this.isUserType = true;
            this.emptyStateText = localize("NO_RECIPIENT");
            this.states = States.loaded;
            this.ref.detectChanges();
        }
        else {
            this.emptyStateText = localize("NO_RECIPIENTS");
            this.states = States.loading;
            this.isUserType = false;
            CometChat.getMessageReceipts(this.message.getId()).then((receipts) => {
                this.receipts = receipts.filter((receipt) => receipt.getSender().getUid() !== this.loggedInUser?.getUid());
                this.states = this.receipts.length > 0 ? States.loaded : States.empty;
                this.ref.detectChanges();
            })
                .catch((err) => {
                this.states = States.error;
            });
        }
    }
    closeClicked() {
        if (this.onClose) {
            this.onClose();
        }
    }
    getSubtitleStyle() {
        return {
            textFont: this.messageInformationStyle.subtitleTextFont,
            textColor: this.messageInformationStyle.subtitleTextColor
        };
    }
    getTitleStyle() {
        return {
            textFont: this.messageInformationStyle.titleTextFont,
            textColor: this.messageInformationStyle.titleTextColor
        };
    }
}
CometChatMessageInformationComponent.Éµfac = i0.ÉµÉµngDeclareFactory({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: CometChatMessageInformationComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.CometChatThemeService }], target: i0.ÉµÉµFactoryTarget.Component });
CometChatMessageInformationComponent.Éµcmp = i0.ÉµÉµngDeclareComponent({ minVersion: "12.0.0", version: "13.3.12", type: CometChatMessageInformationComponent, selector: "cometchat-message-information", inputs: { closeIconURL: "closeIconURL", message: "message", title: "title", template: "template", bubbleView: "bubbleView", subtitleView: "subtitleView", listItemView: "listItemView", receiptDatePattern: "receiptDatePattern", onError: "onError", messageInformationStyle: "messageInformationStyle", readIcon: "readIcon", deliveredIcon: "deliveredIcon", onClose: "onClose", listItemStyle: "listItemStyle", emptyStateText: "emptyStateText", errorStateText: "errorStateText", emptyStateView: "emptyStateView", loadingIconURL: "loadingIconURL", loadingStateView: "loadingStateView", errorStateView: "errorStateView" }, usesOnChanges: true, ngImport: i0, template: "<div class=\"cc-message-information__wrapper\" [ngStyle]=\"wrapperStyle()\">\n  <div class=\"cc-message-information__header\">\n    <div class=\"cc-message-information__title\">\n      <cometchat-label [text]=\"title\"\n        [labelStyle]=\"getTitleStyle()\"></cometchat-label>\n    </div>\n    <div class=\"cc-close-button\">\n      <cometchat-button [iconURL]=\"closeIconURL\"\n        [buttonStyle]=\"closeButtonStyle()\" (cc-button-clicked)=\"closeClicked()\">\n      </cometchat-button>\n    </div>\n  </div>\n  <div class=\"cc-message-information__bubble\">\n    <cometchat-label class=\"cc-message-information__caption\"\n      [labelStyle]=\"getCaptionStyle()\" [text]=\"messageText\"></cometchat-label>\n    <div class=\"cc-message-information__bubble-view\">\n      <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n      <ng-container\n        *ngTemplateOutlet=\"bubbleView; context:{ $implicit: message }\">\n      </ng-container>\n      <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n    </div>\n  </div>\n  <div class=\"cc-message-information__list-item\">\n    <cometchat-label class=\"cc-message-information__caption\"\n      [labelStyle]=\"getCaptionStyle()\"\n      [text]=\"receiptInfoText\"></cometchat-label>\n    <div class=\"cc-message-information__bubble-view\"\n      *ngIf=\"isUserType; else listView\">\n      <ng-container *ngIf=\"listItemView; else userListitem\">\n        <ng-container\n          *ngTemplateOutlet=\"listItemView; context:{ $implicit: message }\">\n        </ng-container>\n      </ng-container>\n      <ng-template #userListitem>\n        <div *ngIf=\"!getUserReceipt(); else userReceiptView\"\n          class=\"cc-empty-state-view\">\n          <cometchat-label *ngIf=\"!emptyStateView else customEmptyView\"\n            [text]=\"emptyStateText\"\n            [labelStyle]=\"emptyLabelStyle\"></cometchat-label>\n          <ng-template #customEmptyView>\n            <ng-container *ngTemplateOutlet=\"emptyStateView\">\n            </ng-container>\n          </ng-template>\n        </div>\n        <ng-template #userReceiptView>\n          <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n          <cometchat-list-item [hideSeparator]=\"true\" [id]=\"message.getId()\"\n            [title]=\"message.getReceiver().getName()\"\n            [listItemStyle]=\"listItemStyle\" [avatarURL]=\"getAvatarUrl()\"\n            [avatarName]=\"message.getReceiver().getName()\">\n            <div slot=\"subtitleView\" *ngIf=\"subtitleView;else userSubtitle\">\n              <ng-container *ngTemplateOutlet=\"subtitleView\">\n              </ng-container>\n            </div>\n            <ng-template #userSubtitle>\n              <div class=\"cc-list-item__subtitle-view \" slot=\"subtitleView\">\n                <div class=\"cc-list-item__subtitle\">\n                  <div class=\"cc-list-item__delivered-receipt\"\n                    *ngIf=\"message.getDeliveredAt()\">\n                    <div class=\"cc-list-item__receipt\">\n                      <cometchat-receipt [receipt]=\"deliveredReceipt\"\n                        [receiptStyle]=\"receiptStyle\"\n                        [deliveredIcon]=\"deliveredIcon\"\n                        [readIcon]=\"readIcon\"></cometchat-receipt>\n                      <cometchat-label [text]=\"'Delivered'\"\n                        [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n                    </div>\n                    <cometchat-date [timestamp]=\"message.getDeliveredAt()\"\n                      [dateStyle]=\"dateStyle\"></cometchat-date>\n                  </div>\n                  <div class=\"cc-list-item__read-receipt\"\n                    *ngIf=\"message.getReadAt()\">\n                    <div class=\"cc-list-item__receipt\">\n                      <cometchat-receipt [receipt]=\"readReceipt\"\n                        [receiptStyle]=\"receiptStyle\"\n                        [deliveredIcon]=\"deliveredIcon\"\n                        [readIcon]=\"readIcon\"></cometchat-receipt>\n                      <cometchat-label [text]=\"'Read'\"\n                        [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n                    </div>\n                    <cometchat-date [timestamp]=\"message.getReadAt()\"\n                      [dateStyle]=\"dateStyle\"></cometchat-date>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </cometchat-list-item>\n          <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n        </ng-template>\n      </ng-template>\n    </div>\n  </div>\n</div>\n<!-- list item view -->\n<ng-template #listView>\n  <cometchat-list [list]=\"receipts\"\n    [listItemView]=\"listItemView ? listItemView : listItem\" [hideSearch]=\"true\"\n    [state]=\"states\" [emptyStateText]=\"emptyStateText\"\n    [errorStateText]=\"errorStateText\" [loadingIconURL]=\"loadingIconURL\"\n    [loadingStateView]=\"loadingStateView\" [errorStateView]=\"errorStateView\"\n    [emptyStateView]=\"emptyStateView\" [title]=\"''\"></cometchat-list>\n</ng-template>\n<ng-template #listItem let-messageReceipt>\n  <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n  <cometchat-list-item [hideSeparator]=\"true\"\n    [title]=\"messageReceipt.getSender().getName()\"\n    [listItemStyle]=\"listItemStyle\"\n    [avatarURL]=\"messageReceipt.getSender()?.getAvatar()\"\n    [avatarName]=\"messageReceipt.getSender().getName()\">\n    <div slot=\"subtitleView\" *ngIf=\"subtitleView;else userSubtitle\">\n      <ng-container *ngTemplateOutlet=\"subtitleView\">\n      </ng-container>\n    </div>\n    <ng-template #userSubtitle>\n      <div class=\"cc-list-item__subtitle-view \" slot=\"subtitleView\">\n        <div class=\"cc-list-item__subtitle\">\n          <div class=\"cc-list-item__delivered-receipt\"\n            *ngIf=\"messageReceipt.getDeliveredAt()\">\n            <div class=\"cc-list-item__receipt\">\n              <cometchat-receipt [receipt]=\"deliveredReceipt\"\n                [receiptStyle]=\"receiptStyle\" [deliveredIcon]=\"deliveredIcon\"\n                [readIcon]=\"readIcon\"></cometchat-receipt>\n              <cometchat-label [text]=\"'Delivered'\"\n                [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n            </div>\n            <cometchat-date [timestamp]=\"messageReceipt.getDeliveredAt()\"\n              [dateStyle]=\"dateStyle\"></cometchat-date>\n          </div>\n          <div class=\"cc-list-item__read-receipt\"\n            *ngIf=\"messageReceipt.getReadAt()\">\n            <div class=\"cc-list-item__receipt\">\n              <cometchat-receipt [receipt]=\"readReceipt\"\n                [receiptStyle]=\"receiptStyle\" [deliveredIcon]=\"deliveredIcon\"\n                [readIcon]=\"readIcon\"></cometchat-receipt>\n              <cometchat-label [text]=\"'Read'\"\n                [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n            </div>\n            <cometchat-date [timestamp]=\"messageReceipt.getReadAt()\"\n              [dateStyle]=\"dateStyle\"></cometchat-date>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </cometchat-list-item>\n  <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n</ng-template>\n", styles: [".cc-message-information__wrapper{height:500px;width:500px;background-color:#fff;padding:8px;display:flex;overflow:hidden;flex-direction:column}*{margin:0;padding:0;box-sizing:border-box}.cc-message-information__title{display:flex;align-items:center;justify-content:center;height:fit-content;width:100%;padding:8px 0}.cc-close-button{padding:8px 0}.cc-message-information__header{display:flex;flex-direction:row;justify-content:flex-end}.cc-message-information__bubble-header{display:flex;align-items:flex-start;justify-content:flex-start;padding-bottom:2px}.cc-message-information__bubble-view{overflow-y:auto;max-height:150px;overflow-x:hidden}.cc-message-information__bubble,.cc-message-information__list-item{margin:8px 0;overflow:hidden}.cc-list-item__delivered-receipt,.cc-list-item__read-receipt{display:flex;justify-content:space-between}.cc-list-item__receipt{display:flex}cometchat-label{display:flex;align-items:center;justify-content:flex-start}.cc-empty-state-view{display:flex;align-items:flex-start;justify-content:center}\n"], components: [{ type: i2.CometchatListComponent, selector: "cometchat-list", inputs: ["listItemView", "onScrolledToBottom", "onScrolledToTop", "list", "onSearch", "getSectionHeader", "searchText", "searchIconURL", "listStyle", "searchPlaceholderText", "hideSearch", "hideError", "title", "titleAlignment", "errorStateView", "loadingStateView", "emptyStateView", "state", "errorStateText", "emptyStateText", "loadingIconURL", "showSectionHeader", "sectionHeaderField", "DateSeparatorPattern", "dateSeparatorStyle"] }], directives: [{ type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { type: i3.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ÉµÉµngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.3.12", ngImport: i0, type: CometChatMessageInformationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cometchat-message-information', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"cc-message-information__wrapper\" [ngStyle]=\"wrapperStyle()\">\n  <div class=\"cc-message-information__header\">\n    <div class=\"cc-message-information__title\">\n      <cometchat-label [text]=\"title\"\n        [labelStyle]=\"getTitleStyle()\"></cometchat-label>\n    </div>\n    <div class=\"cc-close-button\">\n      <cometchat-button [iconURL]=\"closeIconURL\"\n        [buttonStyle]=\"closeButtonStyle()\" (cc-button-clicked)=\"closeClicked()\">\n      </cometchat-button>\n    </div>\n  </div>\n  <div class=\"cc-message-information__bubble\">\n    <cometchat-label class=\"cc-message-information__caption\"\n      [labelStyle]=\"getCaptionStyle()\" [text]=\"messageText\"></cometchat-label>\n    <div class=\"cc-message-information__bubble-view\">\n      <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n      <ng-container\n        *ngTemplateOutlet=\"bubbleView; context:{ $implicit: message }\">\n      </ng-container>\n      <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n    </div>\n  </div>\n  <div class=\"cc-message-information__list-item\">\n    <cometchat-label class=\"cc-message-information__caption\"\n      [labelStyle]=\"getCaptionStyle()\"\n      [text]=\"receiptInfoText\"></cometchat-label>\n    <div class=\"cc-message-information__bubble-view\"\n      *ngIf=\"isUserType; else listView\">\n      <ng-container *ngIf=\"listItemView; else userListitem\">\n        <ng-container\n          *ngTemplateOutlet=\"listItemView; context:{ $implicit: message }\">\n        </ng-container>\n      </ng-container>\n      <ng-template #userListitem>\n        <div *ngIf=\"!getUserReceipt(); else userReceiptView\"\n          class=\"cc-empty-state-view\">\n          <cometchat-label *ngIf=\"!emptyStateView else customEmptyView\"\n            [text]=\"emptyStateText\"\n            [labelStyle]=\"emptyLabelStyle\"></cometchat-label>\n          <ng-template #customEmptyView>\n            <ng-container *ngTemplateOutlet=\"emptyStateView\">\n            </ng-container>\n          </ng-template>\n        </div>\n        <ng-template #userReceiptView>\n          <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n          <cometchat-list-item [hideSeparator]=\"true\" [id]=\"message.getId()\"\n            [title]=\"message.getReceiver().getName()\"\n            [listItemStyle]=\"listItemStyle\" [avatarURL]=\"getAvatarUrl()\"\n            [avatarName]=\"message.getReceiver().getName()\">\n            <div slot=\"subtitleView\" *ngIf=\"subtitleView;else userSubtitle\">\n              <ng-container *ngTemplateOutlet=\"subtitleView\">\n              </ng-container>\n            </div>\n            <ng-template #userSubtitle>\n              <div class=\"cc-list-item__subtitle-view \" slot=\"subtitleView\">\n                <div class=\"cc-list-item__subtitle\">\n                  <div class=\"cc-list-item__delivered-receipt\"\n                    *ngIf=\"message.getDeliveredAt()\">\n                    <div class=\"cc-list-item__receipt\">\n                      <cometchat-receipt [receipt]=\"deliveredReceipt\"\n                        [receiptStyle]=\"receiptStyle\"\n                        [deliveredIcon]=\"deliveredIcon\"\n                        [readIcon]=\"readIcon\"></cometchat-receipt>\n                      <cometchat-label [text]=\"'Delivered'\"\n                        [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n                    </div>\n                    <cometchat-date [timestamp]=\"message.getDeliveredAt()\"\n                      [dateStyle]=\"dateStyle\"></cometchat-date>\n                  </div>\n                  <div class=\"cc-list-item__read-receipt\"\n                    *ngIf=\"message.getReadAt()\">\n                    <div class=\"cc-list-item__receipt\">\n                      <cometchat-receipt [receipt]=\"readReceipt\"\n                        [receiptStyle]=\"receiptStyle\"\n                        [deliveredIcon]=\"deliveredIcon\"\n                        [readIcon]=\"readIcon\"></cometchat-receipt>\n                      <cometchat-label [text]=\"'Read'\"\n                        [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n                    </div>\n                    <cometchat-date [timestamp]=\"message.getReadAt()\"\n                      [dateStyle]=\"dateStyle\"></cometchat-date>\n                  </div>\n                </div>\n              </div>\n            </ng-template>\n          </cometchat-list-item>\n          <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n        </ng-template>\n      </ng-template>\n    </div>\n  </div>\n</div>\n<!-- list item view -->\n<ng-template #listView>\n  <cometchat-list [list]=\"receipts\"\n    [listItemView]=\"listItemView ? listItemView : listItem\" [hideSearch]=\"true\"\n    [state]=\"states\" [emptyStateText]=\"emptyStateText\"\n    [errorStateText]=\"errorStateText\" [loadingIconURL]=\"loadingIconURL\"\n    [loadingStateView]=\"loadingStateView\" [errorStateView]=\"errorStateView\"\n    [emptyStateView]=\"emptyStateView\" [title]=\"''\"></cometchat-list>\n</ng-template>\n<ng-template #listItem let-messageReceipt>\n  <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n  <cometchat-list-item [hideSeparator]=\"true\"\n    [title]=\"messageReceipt.getSender().getName()\"\n    [listItemStyle]=\"listItemStyle\"\n    [avatarURL]=\"messageReceipt.getSender()?.getAvatar()\"\n    [avatarName]=\"messageReceipt.getSender().getName()\">\n    <div slot=\"subtitleView\" *ngIf=\"subtitleView;else userSubtitle\">\n      <ng-container *ngTemplateOutlet=\"subtitleView\">\n      </ng-container>\n    </div>\n    <ng-template #userSubtitle>\n      <div class=\"cc-list-item__subtitle-view \" slot=\"subtitleView\">\n        <div class=\"cc-list-item__subtitle\">\n          <div class=\"cc-list-item__delivered-receipt\"\n            *ngIf=\"messageReceipt.getDeliveredAt()\">\n            <div class=\"cc-list-item__receipt\">\n              <cometchat-receipt [receipt]=\"deliveredReceipt\"\n                [receiptStyle]=\"receiptStyle\" [deliveredIcon]=\"deliveredIcon\"\n                [readIcon]=\"readIcon\"></cometchat-receipt>\n              <cometchat-label [text]=\"'Delivered'\"\n                [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n            </div>\n            <cometchat-date [timestamp]=\"messageReceipt.getDeliveredAt()\"\n              [dateStyle]=\"dateStyle\"></cometchat-date>\n          </div>\n          <div class=\"cc-list-item__read-receipt\"\n            *ngIf=\"messageReceipt.getReadAt()\">\n            <div class=\"cc-list-item__receipt\">\n              <cometchat-receipt [receipt]=\"readReceipt\"\n                [receiptStyle]=\"receiptStyle\" [deliveredIcon]=\"deliveredIcon\"\n                [readIcon]=\"readIcon\"></cometchat-receipt>\n              <cometchat-label [text]=\"'Read'\"\n                [labelStyle]=\"getSubtitleStyle()\"></cometchat-label>\n            </div>\n            <cometchat-date [timestamp]=\"messageReceipt.getReadAt()\"\n              [dateStyle]=\"dateStyle\"></cometchat-date>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  </cometchat-list-item>\n  <cometchat-divider [dividerStyle]=\"dividerStyle\"></cometchat-divider>\n</ng-template>\n", styles: [".cc-message-information__wrapper{height:500px;width:500px;background-color:#fff;padding:8px;display:flex;overflow:hidden;flex-direction:column}*{margin:0;padding:0;box-sizing:border-box}.cc-message-information__title{display:flex;align-items:center;justify-content:center;height:fit-content;width:100%;padding:8px 0}.cc-close-button{padding:8px 0}.cc-message-information__header{display:flex;flex-direction:row;justify-content:flex-end}.cc-message-information__bubble-header{display:flex;align-items:flex-start;justify-content:flex-start;padding-bottom:2px}.cc-message-information__bubble-view{overflow-y:auto;max-height:150px;overflow-x:hidden}.cc-message-information__bubble,.cc-message-information__list-item{margin:8px 0;overflow:hidden}.cc-list-item__delivered-receipt,.cc-list-item__read-receipt{display:flex;justify-content:space-between}.cc-list-item__receipt{display:flex}cometchat-label{display:flex;align-items:center;justify-content:flex-start}.cc-empty-state-view{display:flex;align-items:flex-start;justify-content:center}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.CometChatThemeService }]; }, propDecorators: { closeIconURL: [{
                type: Input
            }], message: [{
                type: Input
            }], title: [{
                type: Input
            }], template: [{
                type: Input
            }], bubbleView: [{
                type: Input
            }], subtitleView: [{
                type: Input
            }], listItemView: [{
                type: Input
            }], receiptDatePattern: [{
                type: Input
            }], onError: [{
                type: Input
            }], messageInformationStyle: [{
                type: Input
            }], readIcon: [{
                type: Input
            }], deliveredIcon: [{
                type: Input
            }], onClose: [{
                type: Input
            }], listItemStyle: [{
                type: Input
            }], emptyStateText: [{
                type: Input
            }], errorStateText: [{
                type: Input
            }], emptyStateView: [{
                type: Input
            }], loadingIconURL: [{
                type: Input
            }], loadingStateView: [{
                type: Input
            }], errorStateView: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,